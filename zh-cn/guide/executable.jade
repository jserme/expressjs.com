section
  h3(id='executable') 使用express(1) 来生成一个应用程序

  p.
    Express团队维护了一个可以快速生成项目模板的可执行文件，这里命名为 <code>express(1)</code>.
    如果你使用npm全局安装的express-generator, 在你的机器任何位置它都是可用的:

  +js.
    $ npm install -g express-generator

  p.
    这个工具提供了一个非常简单的生成一个程序骨架的功能，但是它也有局限，比如它只支持很少的几个模板引擎。
    而事实上Express几乎支持所有的为node所建的模板引擎。
    使用 <code>--help</code>查看一下帮助:

  +js.
  
    Usage: express [options]

    Options:

      -h, --help          输出帮助信息
      -V, --version       输出版本号
      -e, --ejs           添加 ejs 模板引擎支持 (默认为jade)
      -H, --hogan         添加 hogan.js模板引擎支持
      -c, --css <engine>  样式 <引擎> 支持 (less|stylus) (默认为css)
      -f, --force         强制在非空目录执行
  p.
    如果你想生成一个支持Jade, Stylus的应用程序，只需要简单的执行下面的命令：

  +js.
    $ express --sessions --css stylus --ejs myapp

    create : myapp
    create : myapp/package.json
    create : myapp/app.js
    create : myapp/public
    create : myapp/public/javascripts
    create : myapp/public/images
    create : myapp/public/stylesheets
    create : myapp/public/stylesheets/style.styl
    create : myapp/routes
    create : myapp/routes/index.js
    create : myapp/views
    create : myapp/views/index.jade
    create : myapp/views/layout.jade

    install dependencies:
      $ cd myapp && npm install

    run the app:
      $ DEBUG=myapp node app  

  p.
    和其它node程序一样，你必须安装依赖：

  +js.
    $ cd myapp
    $ npm install

  p.
   然后让我们运行它吧！

  +js.
    $ node app

  p.
    这些就是一个简单的应用程序创建和运行的所有步骤。
    记住Express没有限定任何的目录结构，这只是一个方便你工作的基本结构。
    如果你想得到更多怎么组织目录结构选择，可以查看github上的<a href="https://github.com/visionmedia/express/tree/master/examples">示例</a>。
