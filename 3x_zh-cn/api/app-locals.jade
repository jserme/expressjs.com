section
  h3(id='app.locals') app.locals

  p.
    应用程序本地变量会附加给所有的在这个应用程序内渲染的模板。
    这是一个非常有用的模板函数，就像应用程序级数据一样。

  +js.
    app.locals.title = 'My App';
    app.locals.strftime = require('strftime');

  p.
    <code>app.locals</code> 对象是一个JavaScript <code>Function</code>,
    执行的时候它会把属性合并到它自身，提供了一种简单展示已有对象作为本地变量的方法

  +js.
    app.locals({
      title: 'My App',
      phone: '1-250-858-9990',
      email: 'me@myapp.com'
    });

    app.locals.title
    // => 'My App'

    app.locals.email
    // => 'me@myapp.com'
  p.
    <code>app.locals</code>对象最终会是一个JavaScript函数对象，你不可以使用Functions和Objects内置的属性，比如<code>name,
    apply, bind, call, arguments, length, constructor</codd>

  +js.
      app.locals({name: 'My App'});

      app.locals.name
      // => 返回 'app.locals' 而不是 'My App' (app.locals 是一个函数 !)
      // => 如果name变量用在一个模板里，发返回一个 ReferenceError 

  p.
    全部的保留字列表可以在很多规范里找到。 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference">JavaScript 规范</a> 介绍了原来的属性，有一些还会被现代的JS引擎识别，<a href="http://www.ecma-international.org/ecma-262/5.1/">EcmaScript 规范</a> 在它的基础上，统一了值，添加了一些，删除了一些废弃的。如果感兴趣，可以看看Functions和Objects的属性值。

  p.
    默认情况下Express只有一个应用程序级本地变量，它是 <code>settings</code>.

  +js.
    app.set('title', 'My App');
    // 在view里使用 settings.title
    
