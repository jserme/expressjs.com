section
  h3(id='res.redirect') res.redirect([status], url)
  p.
    使用可选的状态码跳转到<code>url</code> 
    状态码<code>status</code>默认为302 "Found".

  +js.
    res.redirect('/foo/bar');
    res.redirect('http://example.com');
    res.redirect(301, 'http://example.com');
    res.redirect('../login');

  p.
    Express支持几种跳转，第一种便是使用一个完整的URI跳转到一个完全不同的网站。

  +js.
    res.redirect('http://google.com');

  p.
    第二种是相对根域路径跳转，比如你现在在
    <code>http://example.com/admin/post/new</code>,
    下面的的代码跳转到 <code>/admin</code> 
    将会把你带到<code>http://example.com/admin</code>:

  +js.
    res.redirect('/admin');

  p.
    这是一种相对于应用程序挂载点的跳转。
    比如把一个blog程序挂在 <code>/blog</code>, 
    事实上它无法知道它被挂载，所以当你使用跳转
    <code>/admin/post/new</code> 时，将到跳到<code>http://example.com/admin/post/new</code>,
    下面的相对于挂载点的跳转会把你带到
    <code>http://example.com/blog/admin/post/new</code>:

  +js.
    res.redirect('admin/post/new');

  p.
    路径名.跳转同样也是支持的。
    比如你在<code>http://example.com/admin/post/new</code>,
    下面的跳转会把你带到
    <code>http//example.com/admin/post</code>:

  +js.
    res.redirect('..');

  p.
    最后也是最特别的跳转是 <code>back</code> 跳转,
    它会把你带回Referer（也有可能是Referrer）的地址
    当Referer丢失的时候默认为 <code>/</code> 

  +js.
    res.redirect('back');
  
    
